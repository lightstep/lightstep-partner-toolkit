dist:
    module: github.com/lightstep/lightstep-partner-sdk/collector # the module name for the new distribution, following Go mod conventions. Optional, but recommended.
    name: lightstep-partner-collector
    description: "Custom Lightstep Partner OpenTelemetry Collector distribution" # a long name for the application. Optional.
    include_core: true # whether the core components should be included in the distribution. Optional.
#    otelcol_version: "0.13.0" # the OpenTelemetry Collector version to use as base for the distribution. Optional.
    output_path: /tmp/ls-partner-col-distribution # the path to write the output (sources and binary). Optional.
    version: "0.0.1" # the version for your custom OpenTelemetry Collector. Optional.
    go: "/usr/local/bin/go" # which Go binary to use to compile the generated sources. Optional.
processors:
  - gomod: "github.com/lightstep/lightstep-partner-sdk/collector/webhookprocessor v0.0.1" # the Go module for the component. Required.
    name: "webhookprocessor" # package name to use in the generated sources. Optional.
    path: "./webhookprocessor" # in case a local version should be used for the module, the path relative to the current dir, or a full path can be specified. Optional.
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/processor/spanmetricsprocessor v0.35.0"
    name: "spanmetricsprocessor"
exporters:
  - gomod: "github.com/lightstep/lightstep-partner-sdk/collector/serviceexporter v0.0.1"
    name: "serviceexporter"
    path: "./serviceexporter"
receivers:
  - gomod: "github.com/lightstep/lightstep-partner-sdk/collector/generatorreceiver v0.0.1"
    name: "generatorreceiver"
    path: "./generatorreceiver"
  - gomod: "github.com/lightstep/lightstep-partner-sdk/collector/streamreceiver v0.0.1"
    name: "streamreceiver"
    path: "./streamreceiver"
extensions:
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/extension/healthcheckextension v0.35.0"
    name: "healthcheckextension"
